// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id                String    @id @default(cuid())
  sessions          Session[]
  hashedPassword    String
  createdAt         DateTime  @default(now())
  username          String    @unique
  firstName         String
  lastName          String
  bio               String
  email             String    @unique
  role              Role      @default(USER)
  profileVisibility Boolean   @default(true)
  proofs            Proof[]
  pathways          Pathway[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  person    Person   @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Competency {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())
  title         String
  description   String
  contentArea   ContentArea @relation(fields: [contentAreaId], references: [id])
  proofs        Proof[]
  contentAreaId Int
}

model Pathway {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  title        String        @unique
  approved     Boolean       @default(false)
  description  String
  contentAreas ContentArea[]
  persons      Person[]
}

model ContentArea {
  id           Int          @id @default(autoincrement())
  createdAt    DateTime     @default(now())
  title        String
  pathway      Pathway      @relation(fields: [pathwayId], references: [id])
  pathwayId    Int
  competencies Competency[]
}

model Proof {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
  justification String
  title         String
  description   String
  author        Person     @relation(fields: [personId], references: [id])
  personId      String
  competency    Competency @relation(fields: [competencyId], references: [id])
  competencyId  Int
}

enum Role {
  USER
  ADMIN
}
